// Code generated by protoc-gen-go. DO NOT EDIT.
// source: song_resource.proto

package v1

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 请求单个资源
type GetDetailReq struct {
	// 资源id
	Sids                 []int64  `protobuf:"varint,1,rep,packed,name=sids,proto3" json:"sids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDetailReq) Reset()         { *m = GetDetailReq{} }
func (m *GetDetailReq) String() string { return proto.CompactTextString(m) }
func (*GetDetailReq) ProtoMessage()    {}
func (*GetDetailReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c6708eb7e033133, []int{0}
}

func (m *GetDetailReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDetailReq.Unmarshal(m, b)
}
func (m *GetDetailReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDetailReq.Marshal(b, m, deterministic)
}
func (m *GetDetailReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDetailReq.Merge(m, src)
}
func (m *GetDetailReq) XXX_Size() int {
	return xxx_messageInfo_GetDetailReq.Size(m)
}
func (m *GetDetailReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDetailReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetDetailReq proto.InternalMessageInfo

func (m *GetDetailReq) GetSids() []int64 {
	if m != nil {
		return m.Sids
	}
	return nil
}

// 返回单个资源
type GetDetailResp struct {
	Songs                []*GetDetailResp_Song      `protobuf:"bytes,1,rep,name=songs,proto3" json:"songs,omitempty"`
	Privileges           []*GetDetailResp_Privilege `protobuf:"bytes,2,rep,name=privileges,proto3" json:"privileges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *GetDetailResp) Reset()         { *m = GetDetailResp{} }
func (m *GetDetailResp) String() string { return proto.CompactTextString(m) }
func (*GetDetailResp) ProtoMessage()    {}
func (*GetDetailResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c6708eb7e033133, []int{1}
}

func (m *GetDetailResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDetailResp.Unmarshal(m, b)
}
func (m *GetDetailResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDetailResp.Marshal(b, m, deterministic)
}
func (m *GetDetailResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDetailResp.Merge(m, src)
}
func (m *GetDetailResp) XXX_Size() int {
	return xxx_messageInfo_GetDetailResp.Size(m)
}
func (m *GetDetailResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDetailResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetDetailResp proto.InternalMessageInfo

func (m *GetDetailResp) GetSongs() []*GetDetailResp_Song {
	if m != nil {
		return m.Songs
	}
	return nil
}

func (m *GetDetailResp) GetPrivileges() []*GetDetailResp_Privilege {
	if m != nil {
		return m.Privileges
	}
	return nil
}

type GetDetailResp_Song struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Duration             int64    `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Url                  string   `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDetailResp_Song) Reset()         { *m = GetDetailResp_Song{} }
func (m *GetDetailResp_Song) String() string { return proto.CompactTextString(m) }
func (*GetDetailResp_Song) ProtoMessage()    {}
func (*GetDetailResp_Song) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c6708eb7e033133, []int{1, 0}
}

func (m *GetDetailResp_Song) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDetailResp_Song.Unmarshal(m, b)
}
func (m *GetDetailResp_Song) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDetailResp_Song.Marshal(b, m, deterministic)
}
func (m *GetDetailResp_Song) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDetailResp_Song.Merge(m, src)
}
func (m *GetDetailResp_Song) XXX_Size() int {
	return xxx_messageInfo_GetDetailResp_Song.Size(m)
}
func (m *GetDetailResp_Song) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDetailResp_Song.DiscardUnknown(m)
}

var xxx_messageInfo_GetDetailResp_Song proto.InternalMessageInfo

func (m *GetDetailResp_Song) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetDetailResp_Song) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetDetailResp_Song) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *GetDetailResp_Song) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type GetDetailResp_Privilege struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Maxbr                int64    `protobuf:"varint,2,opt,name=maxbr,proto3" json:"maxbr,omitempty"`
	St                   int64    `protobuf:"varint,3,opt,name=st,proto3" json:"st,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDetailResp_Privilege) Reset()         { *m = GetDetailResp_Privilege{} }
func (m *GetDetailResp_Privilege) String() string { return proto.CompactTextString(m) }
func (*GetDetailResp_Privilege) ProtoMessage()    {}
func (*GetDetailResp_Privilege) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c6708eb7e033133, []int{1, 1}
}

func (m *GetDetailResp_Privilege) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDetailResp_Privilege.Unmarshal(m, b)
}
func (m *GetDetailResp_Privilege) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDetailResp_Privilege.Marshal(b, m, deterministic)
}
func (m *GetDetailResp_Privilege) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDetailResp_Privilege.Merge(m, src)
}
func (m *GetDetailResp_Privilege) XXX_Size() int {
	return xxx_messageInfo_GetDetailResp_Privilege.Size(m)
}
func (m *GetDetailResp_Privilege) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDetailResp_Privilege.DiscardUnknown(m)
}

var xxx_messageInfo_GetDetailResp_Privilege proto.InternalMessageInfo

func (m *GetDetailResp_Privilege) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetDetailResp_Privilege) GetMaxbr() int64 {
	if m != nil {
		return m.Maxbr
	}
	return 0
}

func (m *GetDetailResp_Privilege) GetSt() int64 {
	if m != nil {
		return m.St
	}
	return 0
}

// 请求单个资源
type ListSongGetReq struct {
	// 资源id
	Sids                 []int64  `protobuf:"varint,1,rep,packed,name=sids,proto3" json:"sids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSongGetReq) Reset()         { *m = ListSongGetReq{} }
func (m *ListSongGetReq) String() string { return proto.CompactTextString(m) }
func (*ListSongGetReq) ProtoMessage()    {}
func (*ListSongGetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c6708eb7e033133, []int{2}
}

func (m *ListSongGetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSongGetReq.Unmarshal(m, b)
}
func (m *ListSongGetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSongGetReq.Marshal(b, m, deterministic)
}
func (m *ListSongGetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSongGetReq.Merge(m, src)
}
func (m *ListSongGetReq) XXX_Size() int {
	return xxx_messageInfo_ListSongGetReq.Size(m)
}
func (m *ListSongGetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSongGetReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListSongGetReq proto.InternalMessageInfo

func (m *ListSongGetReq) GetSids() []int64 {
	if m != nil {
		return m.Sids
	}
	return nil
}

// 返回单个资源
type ListSongGetResp struct {
	Songs                []*ListSongGetResp_Song      `protobuf:"bytes,1,rep,name=songs,proto3" json:"songs,omitempty"`
	Privileges           []*ListSongGetResp_Privilege `protobuf:"bytes,2,rep,name=privileges,proto3" json:"privileges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ListSongGetResp) Reset()         { *m = ListSongGetResp{} }
func (m *ListSongGetResp) String() string { return proto.CompactTextString(m) }
func (*ListSongGetResp) ProtoMessage()    {}
func (*ListSongGetResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c6708eb7e033133, []int{3}
}

func (m *ListSongGetResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSongGetResp.Unmarshal(m, b)
}
func (m *ListSongGetResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSongGetResp.Marshal(b, m, deterministic)
}
func (m *ListSongGetResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSongGetResp.Merge(m, src)
}
func (m *ListSongGetResp) XXX_Size() int {
	return xxx_messageInfo_ListSongGetResp.Size(m)
}
func (m *ListSongGetResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSongGetResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListSongGetResp proto.InternalMessageInfo

func (m *ListSongGetResp) GetSongs() []*ListSongGetResp_Song {
	if m != nil {
		return m.Songs
	}
	return nil
}

func (m *ListSongGetResp) GetPrivileges() []*ListSongGetResp_Privilege {
	if m != nil {
		return m.Privileges
	}
	return nil
}

type ListSongGetResp_Song struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Duration             int64    `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Url                  string   `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSongGetResp_Song) Reset()         { *m = ListSongGetResp_Song{} }
func (m *ListSongGetResp_Song) String() string { return proto.CompactTextString(m) }
func (*ListSongGetResp_Song) ProtoMessage()    {}
func (*ListSongGetResp_Song) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c6708eb7e033133, []int{3, 0}
}

func (m *ListSongGetResp_Song) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSongGetResp_Song.Unmarshal(m, b)
}
func (m *ListSongGetResp_Song) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSongGetResp_Song.Marshal(b, m, deterministic)
}
func (m *ListSongGetResp_Song) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSongGetResp_Song.Merge(m, src)
}
func (m *ListSongGetResp_Song) XXX_Size() int {
	return xxx_messageInfo_ListSongGetResp_Song.Size(m)
}
func (m *ListSongGetResp_Song) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSongGetResp_Song.DiscardUnknown(m)
}

var xxx_messageInfo_ListSongGetResp_Song proto.InternalMessageInfo

func (m *ListSongGetResp_Song) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ListSongGetResp_Song) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListSongGetResp_Song) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *ListSongGetResp_Song) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type ListSongGetResp_Privilege struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Maxbr                int64    `protobuf:"varint,2,opt,name=maxbr,proto3" json:"maxbr,omitempty"`
	St                   int64    `protobuf:"varint,3,opt,name=st,proto3" json:"st,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSongGetResp_Privilege) Reset()         { *m = ListSongGetResp_Privilege{} }
func (m *ListSongGetResp_Privilege) String() string { return proto.CompactTextString(m) }
func (*ListSongGetResp_Privilege) ProtoMessage()    {}
func (*ListSongGetResp_Privilege) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c6708eb7e033133, []int{3, 1}
}

func (m *ListSongGetResp_Privilege) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSongGetResp_Privilege.Unmarshal(m, b)
}
func (m *ListSongGetResp_Privilege) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSongGetResp_Privilege.Marshal(b, m, deterministic)
}
func (m *ListSongGetResp_Privilege) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSongGetResp_Privilege.Merge(m, src)
}
func (m *ListSongGetResp_Privilege) XXX_Size() int {
	return xxx_messageInfo_ListSongGetResp_Privilege.Size(m)
}
func (m *ListSongGetResp_Privilege) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSongGetResp_Privilege.DiscardUnknown(m)
}

var xxx_messageInfo_ListSongGetResp_Privilege proto.InternalMessageInfo

func (m *ListSongGetResp_Privilege) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ListSongGetResp_Privilege) GetMaxbr() int64 {
	if m != nil {
		return m.Maxbr
	}
	return 0
}

func (m *ListSongGetResp_Privilege) GetSt() int64 {
	if m != nil {
		return m.St
	}
	return 0
}

// 请求单个资源
type GetAlbumReq struct {
	// 资源id
	Sids                 []int64  `protobuf:"varint,1,rep,packed,name=sids,proto3" json:"sids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAlbumReq) Reset()         { *m = GetAlbumReq{} }
func (m *GetAlbumReq) String() string { return proto.CompactTextString(m) }
func (*GetAlbumReq) ProtoMessage()    {}
func (*GetAlbumReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c6708eb7e033133, []int{4}
}

func (m *GetAlbumReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAlbumReq.Unmarshal(m, b)
}
func (m *GetAlbumReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAlbumReq.Marshal(b, m, deterministic)
}
func (m *GetAlbumReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAlbumReq.Merge(m, src)
}
func (m *GetAlbumReq) XXX_Size() int {
	return xxx_messageInfo_GetAlbumReq.Size(m)
}
func (m *GetAlbumReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAlbumReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAlbumReq proto.InternalMessageInfo

func (m *GetAlbumReq) GetSids() []int64 {
	if m != nil {
		return m.Sids
	}
	return nil
}

type GetAlbumResp struct {
	Albums               []*GetAlbumResp_Album `protobuf:"bytes,1,rep,name=albums,proto3" json:"albums,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetAlbumResp) Reset()         { *m = GetAlbumResp{} }
func (m *GetAlbumResp) String() string { return proto.CompactTextString(m) }
func (*GetAlbumResp) ProtoMessage()    {}
func (*GetAlbumResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c6708eb7e033133, []int{5}
}

func (m *GetAlbumResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAlbumResp.Unmarshal(m, b)
}
func (m *GetAlbumResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAlbumResp.Marshal(b, m, deterministic)
}
func (m *GetAlbumResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAlbumResp.Merge(m, src)
}
func (m *GetAlbumResp) XXX_Size() int {
	return xxx_messageInfo_GetAlbumResp.Size(m)
}
func (m *GetAlbumResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAlbumResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetAlbumResp proto.InternalMessageInfo

func (m *GetAlbumResp) GetAlbums() []*GetAlbumResp_Album {
	if m != nil {
		return m.Albums
	}
	return nil
}

type GetAlbumResp_Album struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Sid                  int64    `protobuf:"varint,2,opt,name=sid,proto3" json:"sid,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	PicUrl               string   `protobuf:"bytes,4,opt,name=pic_url,json=picUrl,proto3" json:"pic_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAlbumResp_Album) Reset()         { *m = GetAlbumResp_Album{} }
func (m *GetAlbumResp_Album) String() string { return proto.CompactTextString(m) }
func (*GetAlbumResp_Album) ProtoMessage()    {}
func (*GetAlbumResp_Album) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c6708eb7e033133, []int{5, 0}
}

func (m *GetAlbumResp_Album) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAlbumResp_Album.Unmarshal(m, b)
}
func (m *GetAlbumResp_Album) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAlbumResp_Album.Marshal(b, m, deterministic)
}
func (m *GetAlbumResp_Album) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAlbumResp_Album.Merge(m, src)
}
func (m *GetAlbumResp_Album) XXX_Size() int {
	return xxx_messageInfo_GetAlbumResp_Album.Size(m)
}
func (m *GetAlbumResp_Album) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAlbumResp_Album.DiscardUnknown(m)
}

var xxx_messageInfo_GetAlbumResp_Album proto.InternalMessageInfo

func (m *GetAlbumResp_Album) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetAlbumResp_Album) GetSid() int64 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *GetAlbumResp_Album) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetAlbumResp_Album) GetPicUrl() string {
	if m != nil {
		return m.PicUrl
	}
	return ""
}

type GetArtistReq struct {
	// 资源id
	Sids                 []int64  `protobuf:"varint,1,rep,packed,name=sids,proto3" json:"sids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetArtistReq) Reset()         { *m = GetArtistReq{} }
func (m *GetArtistReq) String() string { return proto.CompactTextString(m) }
func (*GetArtistReq) ProtoMessage()    {}
func (*GetArtistReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c6708eb7e033133, []int{6}
}

func (m *GetArtistReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArtistReq.Unmarshal(m, b)
}
func (m *GetArtistReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArtistReq.Marshal(b, m, deterministic)
}
func (m *GetArtistReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArtistReq.Merge(m, src)
}
func (m *GetArtistReq) XXX_Size() int {
	return xxx_messageInfo_GetArtistReq.Size(m)
}
func (m *GetArtistReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArtistReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetArtistReq proto.InternalMessageInfo

func (m *GetArtistReq) GetSids() []int64 {
	if m != nil {
		return m.Sids
	}
	return nil
}

type GetArtistResp struct {
	Artists              []*GetArtistResp_Artist `protobuf:"bytes,1,rep,name=artists,proto3" json:"artists,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetArtistResp) Reset()         { *m = GetArtistResp{} }
func (m *GetArtistResp) String() string { return proto.CompactTextString(m) }
func (*GetArtistResp) ProtoMessage()    {}
func (*GetArtistResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c6708eb7e033133, []int{7}
}

func (m *GetArtistResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArtistResp.Unmarshal(m, b)
}
func (m *GetArtistResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArtistResp.Marshal(b, m, deterministic)
}
func (m *GetArtistResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArtistResp.Merge(m, src)
}
func (m *GetArtistResp) XXX_Size() int {
	return xxx_messageInfo_GetArtistResp.Size(m)
}
func (m *GetArtistResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArtistResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetArtistResp proto.InternalMessageInfo

func (m *GetArtistResp) GetArtists() []*GetArtistResp_Artist {
	if m != nil {
		return m.Artists
	}
	return nil
}

type GetArtistResp_Artist struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Sid                  int64    `protobuf:"varint,2,opt,name=sid,proto3" json:"sid,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetArtistResp_Artist) Reset()         { *m = GetArtistResp_Artist{} }
func (m *GetArtistResp_Artist) String() string { return proto.CompactTextString(m) }
func (*GetArtistResp_Artist) ProtoMessage()    {}
func (*GetArtistResp_Artist) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c6708eb7e033133, []int{7, 0}
}

func (m *GetArtistResp_Artist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArtistResp_Artist.Unmarshal(m, b)
}
func (m *GetArtistResp_Artist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArtistResp_Artist.Marshal(b, m, deterministic)
}
func (m *GetArtistResp_Artist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArtistResp_Artist.Merge(m, src)
}
func (m *GetArtistResp_Artist) XXX_Size() int {
	return xxx_messageInfo_GetArtistResp_Artist.Size(m)
}
func (m *GetArtistResp_Artist) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArtistResp_Artist.DiscardUnknown(m)
}

var xxx_messageInfo_GetArtistResp_Artist proto.InternalMessageInfo

func (m *GetArtistResp_Artist) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetArtistResp_Artist) GetSid() int64 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *GetArtistResp_Artist) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// 请求获取单个歌单详情
type GetPlaylistSingleReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPlaylistSingleReq) Reset()         { *m = GetPlaylistSingleReq{} }
func (m *GetPlaylistSingleReq) String() string { return proto.CompactTextString(m) }
func (*GetPlaylistSingleReq) ProtoMessage()    {}
func (*GetPlaylistSingleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c6708eb7e033133, []int{8}
}

func (m *GetPlaylistSingleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlaylistSingleReq.Unmarshal(m, b)
}
func (m *GetPlaylistSingleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlaylistSingleReq.Marshal(b, m, deterministic)
}
func (m *GetPlaylistSingleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlaylistSingleReq.Merge(m, src)
}
func (m *GetPlaylistSingleReq) XXX_Size() int {
	return xxx_messageInfo_GetPlaylistSingleReq.Size(m)
}
func (m *GetPlaylistSingleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlaylistSingleReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlaylistSingleReq proto.InternalMessageInfo

func (m *GetPlaylistSingleReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// 返回单个歌单详情
type GetPlaylistSingleResp struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CoverImgUrl          string   `protobuf:"bytes,3,opt,name=cover_img_url,json=coverImgUrl,proto3" json:"cover_img_url,omitempty"`
	PlayCount            int64    `protobuf:"varint,4,opt,name=play_count,json=playCount,proto3" json:"play_count,omitempty"`
	CommentCount         int64    `protobuf:"varint,5,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"`
	ShareCount           int64    `protobuf:"varint,6,opt,name=share_count,json=shareCount,proto3" json:"share_count,omitempty"`
	Sids                 []int64  `protobuf:"varint,7,rep,packed,name=sids,proto3" json:"sids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPlaylistSingleResp) Reset()         { *m = GetPlaylistSingleResp{} }
func (m *GetPlaylistSingleResp) String() string { return proto.CompactTextString(m) }
func (*GetPlaylistSingleResp) ProtoMessage()    {}
func (*GetPlaylistSingleResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c6708eb7e033133, []int{9}
}

func (m *GetPlaylistSingleResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlaylistSingleResp.Unmarshal(m, b)
}
func (m *GetPlaylistSingleResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlaylistSingleResp.Marshal(b, m, deterministic)
}
func (m *GetPlaylistSingleResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlaylistSingleResp.Merge(m, src)
}
func (m *GetPlaylistSingleResp) XXX_Size() int {
	return xxx_messageInfo_GetPlaylistSingleResp.Size(m)
}
func (m *GetPlaylistSingleResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlaylistSingleResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlaylistSingleResp proto.InternalMessageInfo

func (m *GetPlaylistSingleResp) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetPlaylistSingleResp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetPlaylistSingleResp) GetCoverImgUrl() string {
	if m != nil {
		return m.CoverImgUrl
	}
	return ""
}

func (m *GetPlaylistSingleResp) GetPlayCount() int64 {
	if m != nil {
		return m.PlayCount
	}
	return 0
}

func (m *GetPlaylistSingleResp) GetCommentCount() int64 {
	if m != nil {
		return m.CommentCount
	}
	return 0
}

func (m *GetPlaylistSingleResp) GetShareCount() int64 {
	if m != nil {
		return m.ShareCount
	}
	return 0
}

func (m *GetPlaylistSingleResp) GetSids() []int64 {
	if m != nil {
		return m.Sids
	}
	return nil
}

// 请求查询歌单列表
type PlaylistGetListReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlaylistGetListReq) Reset()         { *m = PlaylistGetListReq{} }
func (m *PlaylistGetListReq) String() string { return proto.CompactTextString(m) }
func (*PlaylistGetListReq) ProtoMessage()    {}
func (*PlaylistGetListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c6708eb7e033133, []int{10}
}

func (m *PlaylistGetListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaylistGetListReq.Unmarshal(m, b)
}
func (m *PlaylistGetListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaylistGetListReq.Marshal(b, m, deterministic)
}
func (m *PlaylistGetListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaylistGetListReq.Merge(m, src)
}
func (m *PlaylistGetListReq) XXX_Size() int {
	return xxx_messageInfo_PlaylistGetListReq.Size(m)
}
func (m *PlaylistGetListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaylistGetListReq.DiscardUnknown(m)
}

var xxx_messageInfo_PlaylistGetListReq proto.InternalMessageInfo

type PlaylistGetListResp struct {
	Playlists            []*PlaylistGetListResp_Playlist `protobuf:"bytes,1,rep,name=playlists,proto3" json:"playlists,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *PlaylistGetListResp) Reset()         { *m = PlaylistGetListResp{} }
func (m *PlaylistGetListResp) String() string { return proto.CompactTextString(m) }
func (*PlaylistGetListResp) ProtoMessage()    {}
func (*PlaylistGetListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c6708eb7e033133, []int{11}
}

func (m *PlaylistGetListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaylistGetListResp.Unmarshal(m, b)
}
func (m *PlaylistGetListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaylistGetListResp.Marshal(b, m, deterministic)
}
func (m *PlaylistGetListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaylistGetListResp.Merge(m, src)
}
func (m *PlaylistGetListResp) XXX_Size() int {
	return xxx_messageInfo_PlaylistGetListResp.Size(m)
}
func (m *PlaylistGetListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaylistGetListResp.DiscardUnknown(m)
}

var xxx_messageInfo_PlaylistGetListResp proto.InternalMessageInfo

func (m *PlaylistGetListResp) GetPlaylists() []*PlaylistGetListResp_Playlist {
	if m != nil {
		return m.Playlists
	}
	return nil
}

type PlaylistGetListResp_Playlist struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CoverImgUrl          string   `protobuf:"bytes,3,opt,name=cover_img_url,json=coverImgUrl,proto3" json:"cover_img_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlaylistGetListResp_Playlist) Reset()         { *m = PlaylistGetListResp_Playlist{} }
func (m *PlaylistGetListResp_Playlist) String() string { return proto.CompactTextString(m) }
func (*PlaylistGetListResp_Playlist) ProtoMessage()    {}
func (*PlaylistGetListResp_Playlist) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c6708eb7e033133, []int{11, 0}
}

func (m *PlaylistGetListResp_Playlist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaylistGetListResp_Playlist.Unmarshal(m, b)
}
func (m *PlaylistGetListResp_Playlist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaylistGetListResp_Playlist.Marshal(b, m, deterministic)
}
func (m *PlaylistGetListResp_Playlist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaylistGetListResp_Playlist.Merge(m, src)
}
func (m *PlaylistGetListResp_Playlist) XXX_Size() int {
	return xxx_messageInfo_PlaylistGetListResp_Playlist.Size(m)
}
func (m *PlaylistGetListResp_Playlist) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaylistGetListResp_Playlist.DiscardUnknown(m)
}

var xxx_messageInfo_PlaylistGetListResp_Playlist proto.InternalMessageInfo

func (m *PlaylistGetListResp_Playlist) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PlaylistGetListResp_Playlist) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PlaylistGetListResp_Playlist) GetCoverImgUrl() string {
	if m != nil {
		return m.CoverImgUrl
	}
	return ""
}

func init() {
	proto.RegisterType((*GetDetailReq)(nil), "main.music.GetDetailReq")
	proto.RegisterType((*GetDetailResp)(nil), "main.music.GetDetailResp")
	proto.RegisterType((*GetDetailResp_Song)(nil), "main.music.GetDetailResp.Song")
	proto.RegisterType((*GetDetailResp_Privilege)(nil), "main.music.GetDetailResp.Privilege")
	proto.RegisterType((*ListSongGetReq)(nil), "main.music.ListSongGetReq")
	proto.RegisterType((*ListSongGetResp)(nil), "main.music.ListSongGetResp")
	proto.RegisterType((*ListSongGetResp_Song)(nil), "main.music.ListSongGetResp.Song")
	proto.RegisterType((*ListSongGetResp_Privilege)(nil), "main.music.ListSongGetResp.Privilege")
	proto.RegisterType((*GetAlbumReq)(nil), "main.music.GetAlbumReq")
	proto.RegisterType((*GetAlbumResp)(nil), "main.music.GetAlbumResp")
	proto.RegisterType((*GetAlbumResp_Album)(nil), "main.music.GetAlbumResp.Album")
	proto.RegisterType((*GetArtistReq)(nil), "main.music.GetArtistReq")
	proto.RegisterType((*GetArtistResp)(nil), "main.music.GetArtistResp")
	proto.RegisterType((*GetArtistResp_Artist)(nil), "main.music.GetArtistResp.Artist")
	proto.RegisterType((*GetPlaylistSingleReq)(nil), "main.music.GetPlaylistSingleReq")
	proto.RegisterType((*GetPlaylistSingleResp)(nil), "main.music.GetPlaylistSingleResp")
	proto.RegisterType((*PlaylistGetListReq)(nil), "main.music.PlaylistGetListReq")
	proto.RegisterType((*PlaylistGetListResp)(nil), "main.music.PlaylistGetListResp")
	proto.RegisterType((*PlaylistGetListResp_Playlist)(nil), "main.music.PlaylistGetListResp.Playlist")
}

func init() { proto.RegisterFile("song_resource.proto", fileDescriptor_3c6708eb7e033133) }

var fileDescriptor_3c6708eb7e033133 = []byte{
	// 855 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0xcd, 0x8e, 0xdc, 0x44,
	0x10, 0x96, 0xed, 0xd9, 0xd9, 0x9d, 0x9a, 0xdd, 0xac, 0xd2, 0x09, 0xe0, 0x35, 0x51, 0x3c, 0x38,
	0x20, 0xcd, 0x25, 0x0e, 0x04, 0x01, 0x52, 0x24, 0x04, 0x6b, 0xa2, 0x58, 0x91, 0x72, 0x88, 0x3a,
	0x5a, 0x09, 0x10, 0xd2, 0xca, 0x33, 0xee, 0x38, 0x2d, 0xf9, 0x6f, 0xdc, 0xed, 0x85, 0x5c, 0x90,
	0x38, 0x71, 0xe2, 0x69, 0x38, 0xf2, 0x08, 0xdc, 0x78, 0x00, 0xdf, 0xb8, 0xf8, 0xc8, 0x13, 0xa0,
	0xfe, 0x19, 0xaf, 0x67, 0x77, 0xbc, 0x91, 0x58, 0xc4, 0x89, 0x8b, 0x5d, 0x55, 0xae, 0xaf, 0xba,
	0xba, 0xbf, 0xaa, 0x6a, 0xc3, 0x2d, 0x56, 0xe4, 0xc9, 0x69, 0x45, 0x58, 0x51, 0x57, 0x4b, 0xe2,
	0x97, 0x55, 0xc1, 0x0b, 0x04, 0x59, 0x44, 0x73, 0x3f, 0xab, 0x19, 0x5d, 0x3a, 0xf7, 0x13, 0xca,
	0x5f, 0xd5, 0x0b, 0x7f, 0x59, 0x64, 0x0f, 0x92, 0x22, 0x29, 0x1e, 0x48, 0x97, 0x45, 0xfd, 0x52,
	0x6a, 0x52, 0x91, 0x92, 0x82, 0x7a, 0x21, 0xec, 0x87, 0x84, 0x3f, 0x26, 0x3c, 0xa2, 0x29, 0x26,
	0x2b, 0xf4, 0x19, 0x8c, 0x18, 0x8d, 0x99, 0x6d, 0xcc, 0xac, 0xb9, 0x15, 0xdc, 0xfb, 0xab, 0x71,
	0xdd, 0x97, 0x45, 0x95, 0x3d, 0xf2, 0x84, 0xd5, 0x9b, 0x9d, 0x45, 0x29, 0x8d, 0x23, 0x4e, 0x1e,
	0x79, 0x15, 0x59, 0xd5, 0xb4, 0x22, 0xb1, 0x87, 0x25, 0xc0, 0xfb, 0xd9, 0x82, 0x83, 0x5e, 0x24,
	0x56, 0xa2, 0x2f, 0x60, 0x47, 0x24, 0xab, 0x62, 0x4d, 0x1f, 0xde, 0xf5, 0xcf, 0xb3, 0xf4, 0x37,
	0x3c, 0xfd, 0x17, 0x45, 0x9e, 0x04, 0x93, 0xb6, 0x71, 0x15, 0x00, 0xab, 0x17, 0x7a, 0x01, 0x50,
	0x56, 0xf4, 0x8c, 0xa6, 0x24, 0x21, 0xcc, 0x36, 0x65, 0x94, 0x7b, 0xc3, 0x51, 0x9e, 0xaf, 0x7d,
	0x83, 0x1b, 0x6d, 0xe3, 0xf6, 0xa0, 0xb8, 0x27, 0x3b, 0x3f, 0x19, 0x30, 0x12, 0xeb, 0xa1, 0xb7,
	0xc1, 0xa4, 0xb1, 0x6d, 0xcc, 0x8c, 0xb9, 0x15, 0x8c, 0xdb, 0xc6, 0x35, 0x69, 0x8c, 0x4d, 0x1a,
	0xa3, 0x3b, 0x30, 0xca, 0xa3, 0x8c, 0xd8, 0xe6, 0xcc, 0x98, 0x4f, 0x82, 0xbd, 0xb6, 0x71, 0xa5,
	0x8e, 0xe5, 0x13, 0xcd, 0x61, 0x2f, 0xae, 0xab, 0x88, 0xd3, 0x22, 0xb7, 0x2d, 0x89, 0xdd, 0x6f,
	0x1b, 0xb7, 0xb3, 0xe1, 0x4e, 0x42, 0x47, 0x60, 0xd5, 0x55, 0x6a, 0x8f, 0x64, 0x98, 0xdd, 0xb6,
	0x71, 0x85, 0x8a, 0xc5, 0xc3, 0xf9, 0x0e, 0x26, 0x5d, 0xb2, 0x83, 0x79, 0xb8, 0xb0, 0x93, 0x45,
	0x3f, 0x2c, 0x2a, 0x99, 0x88, 0xa5, 0x8e, 0x47, 0x1a, 0xb0, 0x7a, 0x09, 0x20, 0xe3, 0x3a, 0x09,
	0x09, 0x64, 0x1c, 0x9b, 0x8c, 0x7b, 0x4f, 0xe1, 0xc6, 0x33, 0xca, 0xb8, 0xd8, 0x64, 0x48, 0xf8,
	0xb5, 0x48, 0xfd, 0xc5, 0x82, 0xc3, 0x8d, 0x58, 0xac, 0x44, 0xc7, 0x9b, 0xb4, 0xce, 0xfa, 0x84,
	0x5c, 0xf0, 0x1d, 0x22, 0xf6, 0x64, 0x0b, 0xb1, 0x1f, 0x5c, 0x15, 0xe7, 0x7f, 0x6a, 0x15, 0xb5,
	0x4f, 0x60, 0x1a, 0x12, 0x7e, 0x9c, 0x2e, 0xea, 0xec, 0x5a, 0xbc, 0xfe, 0x61, 0xc8, 0xb6, 0xd7,
	0x81, 0x58, 0x89, 0x02, 0x18, 0x47, 0x42, 0x19, 0x6a, 0xd6, 0xce, 0xd3, 0x97, 0x52, 0x00, 0x6d,
	0xe3, 0x6a, 0x04, 0xd6, 0x6f, 0xe7, 0x47, 0xd8, 0x91, 0x1f, 0x07, 0xb7, 0x7d, 0x04, 0x16, 0xa3,
	0xb1, 0xde, 0xb4, 0x3c, 0x36, 0x46, 0x63, 0x2c, 0x1e, 0x1d, 0x33, 0xd6, 0x56, 0x66, 0xde, 0x87,
	0xdd, 0x92, 0x2e, 0x4f, 0xcf, 0xcf, 0x7c, 0xda, 0x36, 0xee, 0xda, 0x84, 0xc7, 0x25, 0x5d, 0x9e,
	0x54, 0xa9, 0x1e, 0x65, 0xc7, 0x15, 0xa7, 0xec, 0x7a, 0x55, 0xff, 0xab, 0x21, 0x47, 0xd9, 0x3a,
	0x12, 0x2b, 0x51, 0x08, 0xbb, 0x91, 0xd4, 0xb6, 0x56, 0xfd, 0x86, 0xaf, 0xaf, 0x44, 0x95, 0xa2,
	0x06, 0xe1, 0xb5, 0xe0, 0x7c, 0x03, 0x63, 0xf5, 0xfd, 0x5f, 0x3f, 0x24, 0xcf, 0x87, 0xdb, 0x21,
	0xe1, 0xcf, 0xd3, 0xe8, 0x75, 0x2a, 0xba, 0x87, 0xe6, 0x49, 0x4a, 0xc4, 0x31, 0x0c, 0x2c, 0xe4,
	0xfd, 0x66, 0xc2, 0x5b, 0x5b, 0x00, 0xac, 0xfc, 0x87, 0xed, 0xf3, 0x09, 0x1c, 0x2c, 0x8b, 0x33,
	0x52, 0x9d, 0xd2, 0x2c, 0x91, 0x54, 0xa9, 0x34, 0x6f, 0xb6, 0x8d, 0xbb, 0xf9, 0x01, 0x4f, 0xa5,
	0xfa, 0x34, 0x4b, 0x4e, 0xaa, 0x14, 0xdd, 0x07, 0x28, 0xd3, 0xe8, 0xf5, 0xe9, 0xb2, 0xa8, 0x73,
	0x2e, 0xe9, 0xb5, 0x74, 0x93, 0x77, 0x56, 0x3c, 0x11, 0xf2, 0x57, 0x42, 0x44, 0x9f, 0x8a, 0x55,
	0xb2, 0x8c, 0xe4, 0x5c, 0x23, 0x76, 0x24, 0x42, 0xaf, 0xd2, 0xfb, 0x80, 0xf7, 0xb5, 0xaa, 0x70,
	0x1f, 0xc2, 0x94, 0xbd, 0x8a, 0x2a, 0xa2, 0x51, 0x63, 0x89, 0x3a, 0x6c, 0x1b, 0xb7, 0x6f, 0xc6,
	0x20, 0x15, 0x85, 0xb8, 0xa3, 0xcb, 0x67, 0x57, 0x96, 0x8f, 0xdc, 0xad, 0xd0, 0x75, 0x8d, 0xdc,
	0x06, 0xb4, 0x3e, 0xb9, 0x90, 0xf0, 0x67, 0xaa, 0xe4, 0xbc, 0x3f, 0x0d, 0xb8, 0x75, 0xc9, 0xcc,
	0x4a, 0x74, 0x02, 0x72, 0x0b, 0x69, 0xaf, 0x82, 0xe6, 0xfd, 0x0a, 0xda, 0x82, 0xe9, 0x6c, 0xc1,
	0x41, 0xdb, 0xb8, 0xe7, 0x70, 0x7c, 0x2e, 0x3a, 0xdf, 0xc3, 0xde, 0xda, 0xeb, 0x3f, 0x25, 0xed,
	0xe1, 0xef, 0x16, 0xec, 0x8b, 0x49, 0x8b, 0xf5, 0x7f, 0x08, 0x7a, 0x0c, 0x07, 0x7a, 0x5e, 0xab,
	0x0b, 0x19, 0xd9, 0x03, 0xf7, 0xf4, 0xca, 0x39, 0x1a, 0xbc, 0xc1, 0xd1, 0x97, 0x30, 0x51, 0xdd,
	0x11, 0x12, 0x7e, 0x29, 0x42, 0xd7, 0xd8, 0x97, 0x22, 0xf4, 0x1a, 0xf5, 0x73, 0xd8, 0x93, 0x33,
	0x48, 0x04, 0x78, 0x67, 0xfb, 0x0c, 0x5b, 0x39, 0xf6, 0xd0, 0x70, 0x43, 0x5f, 0xc3, 0xcd, 0x1e,
	0x15, 0xaa, 0x25, 0xd0, 0xc5, 0x5e, 0xbf, 0xd4, 0x62, 0xce, 0x7b, 0x6f, 0xf0, 0x60, 0x25, 0xc2,
	0x70, 0x78, 0x81, 0x64, 0x74, 0xf7, 0xca, 0x0a, 0x58, 0x39, 0xee, 0x1b, 0x2a, 0x04, 0x3d, 0x81,
	0x69, 0xef, 0xa2, 0x44, 0xce, 0xe0, 0x0d, 0xba, 0x72, 0xde, 0xbd, 0xe2, 0x76, 0x0d, 0x46, 0xdf,
	0x9a, 0x67, 0x1f, 0x2d, 0xc6, 0xf2, 0x87, 0xf0, 0xe3, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xeb,
	0x40, 0x58, 0xd7, 0x62, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SongResourceClient is the client API for SongResource service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SongResourceClient interface {
	// Query请求单个资源
	SongGetDetail(ctx context.Context, in *GetDetailReq, opts ...grpc.CallOption) (*GetDetailResp, error)
	ArtistGet(ctx context.Context, in *GetArtistReq, opts ...grpc.CallOption) (*GetArtistResp, error)
	AlbumGet(ctx context.Context, in *GetAlbumReq, opts ...grpc.CallOption) (*GetAlbumResp, error)
	PlaylistGetSingle(ctx context.Context, in *GetPlaylistSingleReq, opts ...grpc.CallOption) (*GetPlaylistSingleResp, error)
	// 获取歌单列表资源
	PlaylistGetList(ctx context.Context, in *PlaylistGetListReq, opts ...grpc.CallOption) (*PlaylistGetListResp, error)
	ListSongGet(ctx context.Context, in *ListSongGetReq, opts ...grpc.CallOption) (*ListSongGetResp, error)
}

type songResourceClient struct {
	cc grpc.ClientConnInterface
}

func NewSongResourceClient(cc grpc.ClientConnInterface) SongResourceClient {
	return &songResourceClient{cc}
}

func (c *songResourceClient) SongGetDetail(ctx context.Context, in *GetDetailReq, opts ...grpc.CallOption) (*GetDetailResp, error) {
	out := new(GetDetailResp)
	err := c.cc.Invoke(ctx, "/main.music.SongResource/SongGetDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *songResourceClient) ArtistGet(ctx context.Context, in *GetArtistReq, opts ...grpc.CallOption) (*GetArtistResp, error) {
	out := new(GetArtistResp)
	err := c.cc.Invoke(ctx, "/main.music.SongResource/ArtistGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *songResourceClient) AlbumGet(ctx context.Context, in *GetAlbumReq, opts ...grpc.CallOption) (*GetAlbumResp, error) {
	out := new(GetAlbumResp)
	err := c.cc.Invoke(ctx, "/main.music.SongResource/AlbumGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *songResourceClient) PlaylistGetSingle(ctx context.Context, in *GetPlaylistSingleReq, opts ...grpc.CallOption) (*GetPlaylistSingleResp, error) {
	out := new(GetPlaylistSingleResp)
	err := c.cc.Invoke(ctx, "/main.music.SongResource/PlaylistGetSingle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *songResourceClient) PlaylistGetList(ctx context.Context, in *PlaylistGetListReq, opts ...grpc.CallOption) (*PlaylistGetListResp, error) {
	out := new(PlaylistGetListResp)
	err := c.cc.Invoke(ctx, "/main.music.SongResource/PlaylistGetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *songResourceClient) ListSongGet(ctx context.Context, in *ListSongGetReq, opts ...grpc.CallOption) (*ListSongGetResp, error) {
	out := new(ListSongGetResp)
	err := c.cc.Invoke(ctx, "/main.music.SongResource/ListSongGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SongResourceServer is the server API for SongResource service.
type SongResourceServer interface {
	// Query请求单个资源
	SongGetDetail(context.Context, *GetDetailReq) (*GetDetailResp, error)
	ArtistGet(context.Context, *GetArtistReq) (*GetArtistResp, error)
	AlbumGet(context.Context, *GetAlbumReq) (*GetAlbumResp, error)
	PlaylistGetSingle(context.Context, *GetPlaylistSingleReq) (*GetPlaylistSingleResp, error)
	// 获取歌单列表资源
	PlaylistGetList(context.Context, *PlaylistGetListReq) (*PlaylistGetListResp, error)
	ListSongGet(context.Context, *ListSongGetReq) (*ListSongGetResp, error)
}

// UnimplementedSongResourceServer can be embedded to have forward compatible implementations.
type UnimplementedSongResourceServer struct {
}

func (*UnimplementedSongResourceServer) SongGetDetail(ctx context.Context, req *GetDetailReq) (*GetDetailResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SongGetDetail not implemented")
}
func (*UnimplementedSongResourceServer) ArtistGet(ctx context.Context, req *GetArtistReq) (*GetArtistResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArtistGet not implemented")
}
func (*UnimplementedSongResourceServer) AlbumGet(ctx context.Context, req *GetAlbumReq) (*GetAlbumResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AlbumGet not implemented")
}
func (*UnimplementedSongResourceServer) PlaylistGetSingle(ctx context.Context, req *GetPlaylistSingleReq) (*GetPlaylistSingleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlaylistGetSingle not implemented")
}
func (*UnimplementedSongResourceServer) PlaylistGetList(ctx context.Context, req *PlaylistGetListReq) (*PlaylistGetListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlaylistGetList not implemented")
}
func (*UnimplementedSongResourceServer) ListSongGet(ctx context.Context, req *ListSongGetReq) (*ListSongGetResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSongGet not implemented")
}

func RegisterSongResourceServer(s *grpc.Server, srv SongResourceServer) {
	s.RegisterService(&_SongResource_serviceDesc, srv)
}

func _SongResource_SongGetDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SongResourceServer).SongGetDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.music.SongResource/SongGetDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SongResourceServer).SongGetDetail(ctx, req.(*GetDetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SongResource_ArtistGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArtistReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SongResourceServer).ArtistGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.music.SongResource/ArtistGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SongResourceServer).ArtistGet(ctx, req.(*GetArtistReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SongResource_AlbumGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAlbumReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SongResourceServer).AlbumGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.music.SongResource/AlbumGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SongResourceServer).AlbumGet(ctx, req.(*GetAlbumReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SongResource_PlaylistGetSingle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPlaylistSingleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SongResourceServer).PlaylistGetSingle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.music.SongResource/PlaylistGetSingle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SongResourceServer).PlaylistGetSingle(ctx, req.(*GetPlaylistSingleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SongResource_PlaylistGetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlaylistGetListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SongResourceServer).PlaylistGetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.music.SongResource/PlaylistGetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SongResourceServer).PlaylistGetList(ctx, req.(*PlaylistGetListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _SongResource_ListSongGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSongGetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SongResourceServer).ListSongGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.music.SongResource/ListSongGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SongResourceServer).ListSongGet(ctx, req.(*ListSongGetReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _SongResource_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.music.SongResource",
	HandlerType: (*SongResourceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SongGetDetail",
			Handler:    _SongResource_SongGetDetail_Handler,
		},
		{
			MethodName: "ArtistGet",
			Handler:    _SongResource_ArtistGet_Handler,
		},
		{
			MethodName: "AlbumGet",
			Handler:    _SongResource_AlbumGet_Handler,
		},
		{
			MethodName: "PlaylistGetSingle",
			Handler:    _SongResource_PlaylistGetSingle_Handler,
		},
		{
			MethodName: "PlaylistGetList",
			Handler:    _SongResource_PlaylistGetList_Handler,
		},
		{
			MethodName: "ListSongGet",
			Handler:    _SongResource_ListSongGet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "song_resource.proto",
}
