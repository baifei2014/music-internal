// Code generated by protoc-gen-go. DO NOT EDIT.
// source: playlist_resource.proto

package v1

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserPlaylistGetReq struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page                 int64    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserPlaylistGetReq) Reset()         { *m = UserPlaylistGetReq{} }
func (m *UserPlaylistGetReq) String() string { return proto.CompactTextString(m) }
func (*UserPlaylistGetReq) ProtoMessage()    {}
func (*UserPlaylistGetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ccde1f059227855, []int{0}
}

func (m *UserPlaylistGetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserPlaylistGetReq.Unmarshal(m, b)
}
func (m *UserPlaylistGetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserPlaylistGetReq.Marshal(b, m, deterministic)
}
func (m *UserPlaylistGetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserPlaylistGetReq.Merge(m, src)
}
func (m *UserPlaylistGetReq) XXX_Size() int {
	return xxx_messageInfo_UserPlaylistGetReq.Size(m)
}
func (m *UserPlaylistGetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UserPlaylistGetReq.DiscardUnknown(m)
}

var xxx_messageInfo_UserPlaylistGetReq proto.InternalMessageInfo

func (m *UserPlaylistGetReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserPlaylistGetReq) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *UserPlaylistGetReq) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type UserPlaylistGetResp struct {
	CurrentPage          int64                           `protobuf:"varint,1,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	TotalCount           int64                           `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Playlist             []*UserPlaylistGetResp_Playlist `protobuf:"bytes,3,rep,name=playlist,proto3" json:"playlist,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *UserPlaylistGetResp) Reset()         { *m = UserPlaylistGetResp{} }
func (m *UserPlaylistGetResp) String() string { return proto.CompactTextString(m) }
func (*UserPlaylistGetResp) ProtoMessage()    {}
func (*UserPlaylistGetResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ccde1f059227855, []int{1}
}

func (m *UserPlaylistGetResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserPlaylistGetResp.Unmarshal(m, b)
}
func (m *UserPlaylistGetResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserPlaylistGetResp.Marshal(b, m, deterministic)
}
func (m *UserPlaylistGetResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserPlaylistGetResp.Merge(m, src)
}
func (m *UserPlaylistGetResp) XXX_Size() int {
	return xxx_messageInfo_UserPlaylistGetResp.Size(m)
}
func (m *UserPlaylistGetResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UserPlaylistGetResp.DiscardUnknown(m)
}

var xxx_messageInfo_UserPlaylistGetResp proto.InternalMessageInfo

func (m *UserPlaylistGetResp) GetCurrentPage() int64 {
	if m != nil {
		return m.CurrentPage
	}
	return 0
}

func (m *UserPlaylistGetResp) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *UserPlaylistGetResp) GetPlaylist() []*UserPlaylistGetResp_Playlist {
	if m != nil {
		return m.Playlist
	}
	return nil
}

type UserPlaylistGetResp_Playlist struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CoverImgUrl          string   `protobuf:"bytes,3,opt,name=cover_img_url,json=coverImgUrl,proto3" json:"cover_img_url,omitempty"`
	CreatorUid           int64    `protobuf:"varint,4,opt,name=creator_uid,json=creatorUid,proto3" json:"creator_uid,omitempty"`
	PlayCount            int64    `protobuf:"varint,5,opt,name=play_count,json=playCount,proto3" json:"play_count,omitempty"`
	CommentCount         int64    `protobuf:"varint,6,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"`
	ShareCount           int64    `protobuf:"varint,7,opt,name=share_count,json=shareCount,proto3" json:"share_count,omitempty"`
	TrackCount           int64    `protobuf:"varint,8,opt,name=track_count,json=trackCount,proto3" json:"track_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserPlaylistGetResp_Playlist) Reset()         { *m = UserPlaylistGetResp_Playlist{} }
func (m *UserPlaylistGetResp_Playlist) String() string { return proto.CompactTextString(m) }
func (*UserPlaylistGetResp_Playlist) ProtoMessage()    {}
func (*UserPlaylistGetResp_Playlist) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ccde1f059227855, []int{1, 0}
}

func (m *UserPlaylistGetResp_Playlist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserPlaylistGetResp_Playlist.Unmarshal(m, b)
}
func (m *UserPlaylistGetResp_Playlist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserPlaylistGetResp_Playlist.Marshal(b, m, deterministic)
}
func (m *UserPlaylistGetResp_Playlist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserPlaylistGetResp_Playlist.Merge(m, src)
}
func (m *UserPlaylistGetResp_Playlist) XXX_Size() int {
	return xxx_messageInfo_UserPlaylistGetResp_Playlist.Size(m)
}
func (m *UserPlaylistGetResp_Playlist) XXX_DiscardUnknown() {
	xxx_messageInfo_UserPlaylistGetResp_Playlist.DiscardUnknown(m)
}

var xxx_messageInfo_UserPlaylistGetResp_Playlist proto.InternalMessageInfo

func (m *UserPlaylistGetResp_Playlist) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserPlaylistGetResp_Playlist) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserPlaylistGetResp_Playlist) GetCoverImgUrl() string {
	if m != nil {
		return m.CoverImgUrl
	}
	return ""
}

func (m *UserPlaylistGetResp_Playlist) GetCreatorUid() int64 {
	if m != nil {
		return m.CreatorUid
	}
	return 0
}

func (m *UserPlaylistGetResp_Playlist) GetPlayCount() int64 {
	if m != nil {
		return m.PlayCount
	}
	return 0
}

func (m *UserPlaylistGetResp_Playlist) GetCommentCount() int64 {
	if m != nil {
		return m.CommentCount
	}
	return 0
}

func (m *UserPlaylistGetResp_Playlist) GetShareCount() int64 {
	if m != nil {
		return m.ShareCount
	}
	return 0
}

func (m *UserPlaylistGetResp_Playlist) GetTrackCount() int64 {
	if m != nil {
		return m.TrackCount
	}
	return 0
}

type PlaylistDetailGetReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlaylistDetailGetReq) Reset()         { *m = PlaylistDetailGetReq{} }
func (m *PlaylistDetailGetReq) String() string { return proto.CompactTextString(m) }
func (*PlaylistDetailGetReq) ProtoMessage()    {}
func (*PlaylistDetailGetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ccde1f059227855, []int{2}
}

func (m *PlaylistDetailGetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaylistDetailGetReq.Unmarshal(m, b)
}
func (m *PlaylistDetailGetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaylistDetailGetReq.Marshal(b, m, deterministic)
}
func (m *PlaylistDetailGetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaylistDetailGetReq.Merge(m, src)
}
func (m *PlaylistDetailGetReq) XXX_Size() int {
	return xxx_messageInfo_PlaylistDetailGetReq.Size(m)
}
func (m *PlaylistDetailGetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaylistDetailGetReq.DiscardUnknown(m)
}

var xxx_messageInfo_PlaylistDetailGetReq proto.InternalMessageInfo

func (m *PlaylistDetailGetReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type PlaylistDetailGetResp struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CoverImgUrl          string   `protobuf:"bytes,3,opt,name=cover_img_url,json=coverImgUrl,proto3" json:"cover_img_url,omitempty"`
	CreatorUid           int64    `protobuf:"varint,4,opt,name=creator_uid,json=creatorUid,proto3" json:"creator_uid,omitempty"`
	PlayCount            int64    `protobuf:"varint,5,opt,name=play_count,json=playCount,proto3" json:"play_count,omitempty"`
	CommentCount         int64    `protobuf:"varint,6,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"`
	ShareCount           int64    `protobuf:"varint,7,opt,name=share_count,json=shareCount,proto3" json:"share_count,omitempty"`
	TrackCount           int64    `protobuf:"varint,8,opt,name=track_count,json=trackCount,proto3" json:"track_count,omitempty"`
	SubscribedCount      int64    `protobuf:"varint,9,opt,name=subscribed_count,json=subscribedCount,proto3" json:"subscribed_count,omitempty"`
	Sids                 []int64  `protobuf:"varint,10,rep,packed,name=sids,proto3" json:"sids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlaylistDetailGetResp) Reset()         { *m = PlaylistDetailGetResp{} }
func (m *PlaylistDetailGetResp) String() string { return proto.CompactTextString(m) }
func (*PlaylistDetailGetResp) ProtoMessage()    {}
func (*PlaylistDetailGetResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ccde1f059227855, []int{3}
}

func (m *PlaylistDetailGetResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaylistDetailGetResp.Unmarshal(m, b)
}
func (m *PlaylistDetailGetResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaylistDetailGetResp.Marshal(b, m, deterministic)
}
func (m *PlaylistDetailGetResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaylistDetailGetResp.Merge(m, src)
}
func (m *PlaylistDetailGetResp) XXX_Size() int {
	return xxx_messageInfo_PlaylistDetailGetResp.Size(m)
}
func (m *PlaylistDetailGetResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaylistDetailGetResp.DiscardUnknown(m)
}

var xxx_messageInfo_PlaylistDetailGetResp proto.InternalMessageInfo

func (m *PlaylistDetailGetResp) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PlaylistDetailGetResp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PlaylistDetailGetResp) GetCoverImgUrl() string {
	if m != nil {
		return m.CoverImgUrl
	}
	return ""
}

func (m *PlaylistDetailGetResp) GetCreatorUid() int64 {
	if m != nil {
		return m.CreatorUid
	}
	return 0
}

func (m *PlaylistDetailGetResp) GetPlayCount() int64 {
	if m != nil {
		return m.PlayCount
	}
	return 0
}

func (m *PlaylistDetailGetResp) GetCommentCount() int64 {
	if m != nil {
		return m.CommentCount
	}
	return 0
}

func (m *PlaylistDetailGetResp) GetShareCount() int64 {
	if m != nil {
		return m.ShareCount
	}
	return 0
}

func (m *PlaylistDetailGetResp) GetTrackCount() int64 {
	if m != nil {
		return m.TrackCount
	}
	return 0
}

func (m *PlaylistDetailGetResp) GetSubscribedCount() int64 {
	if m != nil {
		return m.SubscribedCount
	}
	return 0
}

func (m *PlaylistDetailGetResp) GetSids() []int64 {
	if m != nil {
		return m.Sids
	}
	return nil
}

func init() {
	proto.RegisterType((*UserPlaylistGetReq)(nil), "main.music.UserPlaylistGetReq")
	proto.RegisterType((*UserPlaylistGetResp)(nil), "main.music.UserPlaylistGetResp")
	proto.RegisterType((*UserPlaylistGetResp_Playlist)(nil), "main.music.UserPlaylistGetResp.Playlist")
	proto.RegisterType((*PlaylistDetailGetReq)(nil), "main.music.PlaylistDetailGetReq")
	proto.RegisterType((*PlaylistDetailGetResp)(nil), "main.music.PlaylistDetailGetResp")
}

func init() { proto.RegisterFile("playlist_resource.proto", fileDescriptor_5ccde1f059227855) }

var fileDescriptor_5ccde1f059227855 = []byte{
	// 571 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x54, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0x56, 0x93, 0xd2, 0xb5, 0x2f, 0x1b, 0xed, 0xcc, 0x80, 0xa8, 0x9a, 0x48, 0xa9, 0x38, 0x54,
	0x48, 0xcb, 0xc6, 0x26, 0xb8, 0x22, 0x15, 0x24, 0xb4, 0xdb, 0x64, 0x54, 0x09, 0x71, 0x89, 0xd2,
	0xc4, 0x64, 0x16, 0x49, 0x93, 0xd9, 0xce, 0x24, 0x76, 0xe6, 0x87, 0x71, 0xe3, 0x5f, 0x44, 0x9c,
	0x73, 0xe6, 0x07, 0x20, 0x3b, 0x4e, 0x93, 0xd1, 0xc2, 0x6e, 0x9c, 0xb8, 0x38, 0xef, 0xfb, 0xfc,
	0xbe, 0xe4, 0xe5, 0x7b, 0xf6, 0x83, 0xc7, 0x59, 0xec, 0x7f, 0x89, 0x29, 0x17, 0x1e, 0x23, 0x3c,
	0xcd, 0x59, 0x40, 0xdc, 0x8c, 0xa5, 0x22, 0x45, 0x90, 0xf8, 0x74, 0xe5, 0x26, 0x39, 0xa7, 0xc1,
	0xf8, 0x28, 0xa2, 0xe2, 0x32, 0x5f, 0xba, 0x41, 0x9a, 0x1c, 0x47, 0x69, 0x94, 0x1e, 0xab, 0x94,
	0x65, 0xfe, 0x49, 0x21, 0x05, 0x54, 0x54, 0x49, 0xa7, 0x5f, 0x3b, 0x80, 0x16, 0x9c, 0xb0, 0x0b,
	0xfd, 0xea, 0x77, 0x44, 0x60, 0x72, 0x85, 0x9e, 0xc1, 0x4e, 0xce, 0x09, 0xf3, 0x68, 0x68, 0x77,
	0x26, 0x9d, 0x99, 0x39, 0xb7, 0xca, 0xc2, 0xa9, 0x29, 0xdc, 0x93, 0xc1, 0x79, 0x88, 0x0e, 0xa1,
	0x9b, 0xf9, 0x11, 0xb1, 0x0d, 0x95, 0xd2, 0x2f, 0x0b, 0x47, 0x61, 0xac, 0x56, 0xf4, 0x1c, 0x06,
	0xf2, 0xe9, 0x71, 0x7a, 0x43, 0x6c, 0x53, 0xa5, 0xec, 0x95, 0x85, 0xd3, 0x90, 0xb8, 0x2f, 0xc3,
	0xf7, 0xf4, 0x86, 0x4c, 0xbf, 0x77, 0xe1, 0xc1, 0x46, 0x19, 0x3c, 0x43, 0x67, 0xb0, 0x1b, 0xe4,
	0x8c, 0x91, 0x95, 0xf0, 0xd4, 0x97, 0xaa, 0x62, 0x46, 0x65, 0xe1, 0xdc, 0xe2, 0xb1, 0xa5, 0xd1,
	0x85, 0xfc, 0xf0, 0x09, 0x58, 0x22, 0x15, 0x7e, 0xec, 0x05, 0x69, 0xbe, 0x12, 0xba, 0xba, 0x61,
	0x59, 0x38, 0x6d, 0x1a, 0x83, 0x02, 0x6f, 0x64, 0x8c, 0x30, 0xf4, 0x6b, 0x6f, 0x6d, 0x73, 0x62,
	0xce, 0xac, 0xd3, 0x99, 0xdb, 0x78, 0xea, 0x6e, 0xa9, 0xcc, 0xad, 0xf1, 0x7c, 0xb7, 0x2c, 0x9c,
	0xb5, 0x1a, 0xaf, 0xa3, 0xf1, 0x4f, 0x03, 0xfa, 0x75, 0x12, 0x7a, 0x04, 0xc6, 0xda, 0xca, 0x5e,
	0x59, 0x38, 0x06, 0x0d, 0xb1, 0x41, 0x95, 0x83, 0x2b, 0x3f, 0xa9, 0x1c, 0x1c, 0x54, 0x0e, 0x4a,
	0x8c, 0xd5, 0x8a, 0x5e, 0xc2, 0x5e, 0x90, 0x5e, 0x4b, 0xcf, 0x93, 0xc8, 0xcb, 0x59, 0xac, 0x5c,
	0x1c, 0xcc, 0xf7, 0xcb, 0xc2, 0xb9, 0xbd, 0x81, 0x2d, 0x05, 0xcf, 0x93, 0x68, 0xc1, 0x62, 0xf9,
	0xff, 0x01, 0x23, 0xbe, 0x48, 0x99, 0x97, 0xd3, 0xd0, 0xee, 0x36, 0xff, 0xdf, 0xa2, 0x31, 0x68,
	0xb0, 0xa0, 0x21, 0x3a, 0x02, 0x90, 0x75, 0x6b, 0xc3, 0xee, 0x29, 0xc1, 0xfd, 0xb2, 0x70, 0x5a,
	0x2c, 0x1e, 0xc8, 0xb8, 0xb2, 0xeb, 0x95, 0xac, 0x2b, 0x49, 0xa4, 0xfb, 0x95, 0xa2, 0xa7, 0x14,
	0xba, 0xae, 0xd6, 0x06, 0xde, 0xd5, 0xb0, 0xd2, 0x9d, 0x80, 0xc5, 0x2f, 0x7d, 0x46, 0xb4, 0x6a,
	0xa7, 0x29, 0xac, 0x45, 0x63, 0x50, 0x60, 0xad, 0x10, 0xcc, 0x0f, 0x3e, 0x6b, 0x45, 0xbf, 0xd5,
	0xca, 0x86, 0xc6, 0xa0, 0x80, 0x52, 0x4c, 0x5d, 0x38, 0xa8, 0x5d, 0x7f, 0x4b, 0x84, 0x4f, 0x63,
	0x7d, 0xa2, 0xff, 0xd0, 0x81, 0xe9, 0x0f, 0x13, 0x1e, 0x6e, 0x11, 0xf0, 0xec, 0x7f, 0xcf, 0xfe,
	0x55, 0xcf, 0xd0, 0x6b, 0x18, 0xf1, 0x7c, 0xc9, 0x03, 0x46, 0x97, 0x24, 0xd4, 0xb2, 0x81, 0x92,
	0x1d, 0x94, 0x85, 0xb3, 0xb1, 0x87, 0x87, 0x0d, 0x53, 0xbd, 0xe0, 0x10, 0xba, 0x9c, 0x86, 0xdc,
	0x86, 0x89, 0x59, 0x0f, 0x22, 0x89, 0xb1, 0x5a, 0x4f, 0xbf, 0x75, 0x60, 0x54, 0xb7, 0x18, 0xeb,
	0xc9, 0x89, 0x30, 0x0c, 0x7f, 0xbb, 0xd6, 0xe8, 0xc9, 0x5f, 0xef, 0xfc, 0xd5, 0xd8, 0xb9, 0x63,
	0x26, 0xa0, 0x0f, 0xb0, 0xbf, 0x71, 0x94, 0xd0, 0xa4, 0xad, 0xda, 0x76, 0x34, 0xc7, 0x4f, 0xef,
	0xc8, 0xe0, 0xd9, 0xbc, 0xfb, 0xd1, 0xb8, 0x7e, 0xb1, 0xec, 0xa9, 0x99, 0x7d, 0xf6, 0x2b, 0x00,
	0x00, 0xff, 0xff, 0x73, 0xc3, 0x77, 0x4f, 0x09, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PlaylistResourceClient is the client API for PlaylistResource service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlaylistResourceClient interface {
	UserPlaylistGet(ctx context.Context, in *UserPlaylistGetReq, opts ...grpc.CallOption) (*UserPlaylistGetResp, error)
	PlaylistDetailGet(ctx context.Context, in *PlaylistDetailGetReq, opts ...grpc.CallOption) (*PlaylistDetailGetResp, error)
}

type playlistResourceClient struct {
	cc grpc.ClientConnInterface
}

func NewPlaylistResourceClient(cc grpc.ClientConnInterface) PlaylistResourceClient {
	return &playlistResourceClient{cc}
}

func (c *playlistResourceClient) UserPlaylistGet(ctx context.Context, in *UserPlaylistGetReq, opts ...grpc.CallOption) (*UserPlaylistGetResp, error) {
	out := new(UserPlaylistGetResp)
	err := c.cc.Invoke(ctx, "/main.music.PlaylistResource/UserPlaylistGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playlistResourceClient) PlaylistDetailGet(ctx context.Context, in *PlaylistDetailGetReq, opts ...grpc.CallOption) (*PlaylistDetailGetResp, error) {
	out := new(PlaylistDetailGetResp)
	err := c.cc.Invoke(ctx, "/main.music.PlaylistResource/PlaylistDetailGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlaylistResourceServer is the server API for PlaylistResource service.
type PlaylistResourceServer interface {
	UserPlaylistGet(context.Context, *UserPlaylistGetReq) (*UserPlaylistGetResp, error)
	PlaylistDetailGet(context.Context, *PlaylistDetailGetReq) (*PlaylistDetailGetResp, error)
}

// UnimplementedPlaylistResourceServer can be embedded to have forward compatible implementations.
type UnimplementedPlaylistResourceServer struct {
}

func (*UnimplementedPlaylistResourceServer) UserPlaylistGet(ctx context.Context, req *UserPlaylistGetReq) (*UserPlaylistGetResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserPlaylistGet not implemented")
}
func (*UnimplementedPlaylistResourceServer) PlaylistDetailGet(ctx context.Context, req *PlaylistDetailGetReq) (*PlaylistDetailGetResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlaylistDetailGet not implemented")
}

func RegisterPlaylistResourceServer(s *grpc.Server, srv PlaylistResourceServer) {
	s.RegisterService(&_PlaylistResource_serviceDesc, srv)
}

func _PlaylistResource_UserPlaylistGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserPlaylistGetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlaylistResourceServer).UserPlaylistGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.music.PlaylistResource/UserPlaylistGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlaylistResourceServer).UserPlaylistGet(ctx, req.(*UserPlaylistGetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlaylistResource_PlaylistDetailGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlaylistDetailGetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlaylistResourceServer).PlaylistDetailGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.music.PlaylistResource/PlaylistDetailGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlaylistResourceServer).PlaylistDetailGet(ctx, req.(*PlaylistDetailGetReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PlaylistResource_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.music.PlaylistResource",
	HandlerType: (*PlaylistResourceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UserPlaylistGet",
			Handler:    _PlaylistResource_UserPlaylistGet_Handler,
		},
		{
			MethodName: "PlaylistDetailGet",
			Handler:    _PlaylistResource_PlaylistDetailGet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "playlist_resource.proto",
}
