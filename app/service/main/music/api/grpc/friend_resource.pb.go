// Code generated by protoc-gen-go. DO NOT EDIT.
// source: friend_resource.proto

package v1

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FriendlistInfoGetReq struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendlistInfoGetReq) Reset()         { *m = FriendlistInfoGetReq{} }
func (m *FriendlistInfoGetReq) String() string { return proto.CompactTextString(m) }
func (*FriendlistInfoGetReq) ProtoMessage()    {}
func (*FriendlistInfoGetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_013e0dde1e6f7e6d, []int{0}
}

func (m *FriendlistInfoGetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendlistInfoGetReq.Unmarshal(m, b)
}
func (m *FriendlistInfoGetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendlistInfoGetReq.Marshal(b, m, deterministic)
}
func (m *FriendlistInfoGetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendlistInfoGetReq.Merge(m, src)
}
func (m *FriendlistInfoGetReq) XXX_Size() int {
	return xxx_messageInfo_FriendlistInfoGetReq.Size(m)
}
func (m *FriendlistInfoGetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendlistInfoGetReq.DiscardUnknown(m)
}

var xxx_messageInfo_FriendlistInfoGetReq proto.InternalMessageInfo

func (m *FriendlistInfoGetReq) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type FriendlistInfoGetResp struct {
	List                 []*FriendlistInfoGetResp_List `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *FriendlistInfoGetResp) Reset()         { *m = FriendlistInfoGetResp{} }
func (m *FriendlistInfoGetResp) String() string { return proto.CompactTextString(m) }
func (*FriendlistInfoGetResp) ProtoMessage()    {}
func (*FriendlistInfoGetResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_013e0dde1e6f7e6d, []int{1}
}

func (m *FriendlistInfoGetResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendlistInfoGetResp.Unmarshal(m, b)
}
func (m *FriendlistInfoGetResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendlistInfoGetResp.Marshal(b, m, deterministic)
}
func (m *FriendlistInfoGetResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendlistInfoGetResp.Merge(m, src)
}
func (m *FriendlistInfoGetResp) XXX_Size() int {
	return xxx_messageInfo_FriendlistInfoGetResp.Size(m)
}
func (m *FriendlistInfoGetResp) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendlistInfoGetResp.DiscardUnknown(m)
}

var xxx_messageInfo_FriendlistInfoGetResp proto.InternalMessageInfo

func (m *FriendlistInfoGetResp) GetList() []*FriendlistInfoGetResp_List {
	if m != nil {
		return m.List
	}
	return nil
}

type FriendlistInfoGetResp_List struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	GroupId              string   `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	AvatarUrl            string   `protobuf:"bytes,4,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendlistInfoGetResp_List) Reset()         { *m = FriendlistInfoGetResp_List{} }
func (m *FriendlistInfoGetResp_List) String() string { return proto.CompactTextString(m) }
func (*FriendlistInfoGetResp_List) ProtoMessage()    {}
func (*FriendlistInfoGetResp_List) Descriptor() ([]byte, []int) {
	return fileDescriptor_013e0dde1e6f7e6d, []int{1, 0}
}

func (m *FriendlistInfoGetResp_List) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendlistInfoGetResp_List.Unmarshal(m, b)
}
func (m *FriendlistInfoGetResp_List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendlistInfoGetResp_List.Marshal(b, m, deterministic)
}
func (m *FriendlistInfoGetResp_List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendlistInfoGetResp_List.Merge(m, src)
}
func (m *FriendlistInfoGetResp_List) XXX_Size() int {
	return xxx_messageInfo_FriendlistInfoGetResp_List.Size(m)
}
func (m *FriendlistInfoGetResp_List) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendlistInfoGetResp_List.DiscardUnknown(m)
}

var xxx_messageInfo_FriendlistInfoGetResp_List proto.InternalMessageInfo

func (m *FriendlistInfoGetResp_List) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *FriendlistInfoGetResp_List) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

func (m *FriendlistInfoGetResp_List) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FriendlistInfoGetResp_List) GetAvatarUrl() string {
	if m != nil {
		return m.AvatarUrl
	}
	return ""
}

func init() {
	proto.RegisterType((*FriendlistInfoGetReq)(nil), "main.music.FriendlistInfoGetReq")
	proto.RegisterType((*FriendlistInfoGetResp)(nil), "main.music.FriendlistInfoGetResp")
	proto.RegisterType((*FriendlistInfoGetResp_List)(nil), "main.music.FriendlistInfoGetResp.List")
}

func init() { proto.RegisterFile("friend_resource.proto", fileDescriptor_013e0dde1e6f7e6d) }

var fileDescriptor_013e0dde1e6f7e6d = []byte{
	// 303 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x51, 0xd1, 0x4a, 0xf3, 0x30,
	0x14, 0x26, 0x6b, 0xf9, 0xb7, 0x9d, 0x5f, 0x06, 0x06, 0x07, 0x75, 0x08, 0xad, 0xbb, 0xd0, 0xdd,
	0x2c, 0x63, 0xf3, 0x0d, 0x8a, 0x28, 0x03, 0xaf, 0x02, 0x82, 0x78, 0x33, 0xba, 0x35, 0xab, 0x91,
	0xb6, 0xe9, 0xd2, 0x64, 0xaf, 0xe2, 0xdb, 0xf5, 0x01, 0xfa, 0x02, 0xde, 0x4a, 0x4f, 0x45, 0x05,
	0x87, 0xbb, 0x39, 0x9c, 0xef, 0xcb, 0xf7, 0x25, 0xe7, 0x3b, 0x81, 0xe1, 0x56, 0x4b, 0x91, 0xc7,
	0x2b, 0x2d, 0x4a, 0x65, 0xf5, 0x46, 0xb0, 0x42, 0x2b, 0xa3, 0x28, 0x64, 0x91, 0xcc, 0x59, 0x66,
	0x4b, 0xb9, 0x19, 0x4d, 0x13, 0x69, 0x5e, 0xec, 0x9a, 0x6d, 0x54, 0x36, 0x4b, 0x54, 0xa2, 0x66,
	0x28, 0x59, 0xdb, 0x2d, 0x22, 0x04, 0xd8, 0xb5, 0xd6, 0xf1, 0x1c, 0xce, 0xee, 0xf0, 0xce, 0x54,
	0x96, 0x66, 0x99, 0x6f, 0xd5, 0xbd, 0x30, 0x5c, 0xec, 0xe8, 0x39, 0x38, 0x56, 0xc6, 0x1e, 0x09,
	0xc8, 0xc4, 0x09, 0xbb, 0x75, 0xe5, 0x37, 0x90, 0x37, 0x65, 0xfc, 0x4e, 0x60, 0x78, 0xc0, 0x53,
	0x16, 0xf4, 0x16, 0xdc, 0x86, 0xf2, 0x48, 0xe0, 0x4c, 0xfe, 0x2f, 0xae, 0xd8, 0xf7, 0x58, 0xec,
	0xa0, 0x81, 0x3d, 0xc8, 0xd2, 0x84, 0xbd, 0xba, 0xf2, 0xd1, 0xc7, 0xb1, 0x8e, 0xde, 0x08, 0xb8,
	0xcd, 0xc1, 0x1f, 0x33, 0xd0, 0x6b, 0xe8, 0x25, 0x5a, 0xd9, 0x62, 0x25, 0x63, 0xaf, 0x13, 0x90,
	0x49, 0x3f, 0x3c, 0xa9, 0x2b, 0xff, 0x8b, 0xe3, 0x5d, 0xec, 0x96, 0x31, 0xbd, 0x00, 0x37, 0x8f,
	0x32, 0xe1, 0x39, 0x28, 0xc2, 0xa7, 0x1a, 0xcc, 0xb1, 0xd2, 0x29, 0x40, 0xb4, 0x8f, 0x4c, 0xa4,
	0x57, 0x56, 0xa7, 0x9e, 0x8b, 0x9a, 0x41, 0x5d, 0xf9, 0x3f, 0x58, 0xde, 0x6f, 0xfb, 0x47, 0x9d,
	0x2e, 0x5e, 0x61, 0xd0, 0xe6, 0xe0, 0x9f, 0xfb, 0xa7, 0x4f, 0x70, 0xfa, 0x2b, 0x19, 0x0d, 0x8e,
	0x04, 0xdf, 0x8d, 0x2e, 0x8f, 0xae, 0x26, 0x74, 0x9f, 0x3b, 0xfb, 0xf9, 0xfa, 0x1f, 0xfe, 0xd2,
	0xcd, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbf, 0x34, 0x26, 0x72, 0xf9, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FriendResourceClient is the client API for FriendResource service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FriendResourceClient interface {
	FriendlistInfoGet(ctx context.Context, in *FriendlistInfoGetReq, opts ...grpc.CallOption) (*FriendlistInfoGetResp, error)
}

type friendResourceClient struct {
	cc grpc.ClientConnInterface
}

func NewFriendResourceClient(cc grpc.ClientConnInterface) FriendResourceClient {
	return &friendResourceClient{cc}
}

func (c *friendResourceClient) FriendlistInfoGet(ctx context.Context, in *FriendlistInfoGetReq, opts ...grpc.CallOption) (*FriendlistInfoGetResp, error) {
	out := new(FriendlistInfoGetResp)
	err := c.cc.Invoke(ctx, "/main.music.FriendResource/FriendlistInfoGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FriendResourceServer is the server API for FriendResource service.
type FriendResourceServer interface {
	FriendlistInfoGet(context.Context, *FriendlistInfoGetReq) (*FriendlistInfoGetResp, error)
}

// UnimplementedFriendResourceServer can be embedded to have forward compatible implementations.
type UnimplementedFriendResourceServer struct {
}

func (*UnimplementedFriendResourceServer) FriendlistInfoGet(ctx context.Context, req *FriendlistInfoGetReq) (*FriendlistInfoGetResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FriendlistInfoGet not implemented")
}

func RegisterFriendResourceServer(s *grpc.Server, srv FriendResourceServer) {
	s.RegisterService(&_FriendResource_serviceDesc, srv)
}

func _FriendResource_FriendlistInfoGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FriendlistInfoGetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendResourceServer).FriendlistInfoGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.music.FriendResource/FriendlistInfoGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendResourceServer).FriendlistInfoGet(ctx, req.(*FriendlistInfoGetReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _FriendResource_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.music.FriendResource",
	HandlerType: (*FriendResourceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FriendlistInfoGet",
			Handler:    _FriendResource_FriendlistInfoGet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "friend_resource.proto",
}
